# GitHub action for building the distribution and wheels of the sep package
# and uploading them to the PyPI package index.

name: build-wheels-upload-pypi

on:
  push:
    # Run this action on the trigger event when *any* tag is pushed
    tags:
       - '*'

jobs:

  # This action is split into three jobs:
  # - Building the source distribution
  # - Building the wheels for the distribution
  # - Uploading the artifacts to PyPI package
  # The first and second job run in parallel.
  # The uploading jos needs to have the other two finished without error.

  build_sdist:

    # First the source distribution is done on ubuntu. This is not related
    # to any operating system, so we could do it on the default os.

    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install_python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # For the build, sep needs numpy and cython and we add twine and wheel
      # for better testing and checking.
      - name: Update PIP
        run: python -m pip install pip --upgrade

      - name: Install dependencies
        run: python -m pip install setuptools twine numpy wheel cython

      - name: Build sdist
        run: python setup.py sdist

      - name: Show files
        run: ls -lh dist
        shell: bash

      - name: Check metadata
        run: twine check dist/*

      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*.tar.gz

  build_wheels:

    # Second the wheels are build for different OS and python versions. This is
    # done with the help of the `cibuildwheel` package.
    #
    # The wheels are built for Windows, Linux and macOS and the python versions
    # 3.5 - 3.10.
    #
    # The three operating system could be done in parallel.

    runs-on: ${{ matrix.os }}
    env:
      CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
      
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: ubuntu-22.04
            cibw_archs: "aarch64"
            python-version: 3.12
  
    steps:
      - name: setup QEMU
        if: matrix.cibw_archs == 'aarch64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: checkout
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        if: matrix.cibw_archs == 'aarch64'
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp3*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_BUILD_VERBOSITY: 1
          CIBW_SKIP: '*-musllinux_*'
          CIBW_ARCHS_LINUX: "aarch64"

      - name: Build wheels
        if: matrix.cibw_archs != 'aarch64'
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp3*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_BUILD_VERBOSITY: 1
          CIBW_SKIP: '*-musllinux_*'
          CIBW_ARCHS_LINUX: "auto"

      - name: Show files
        run: ls -lh wheelhouse
        shell: bash

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./wheelhouse/*.whl

  upload_to_pypi:

    # Finally we collect all out data from the artifacts and put them back to
    # dist directory for upload. The final step waits for the other jobs to be
    # finished and starts only if the trigger event of the action was a push
    # of a tag starting with <v> as version separation. All other jobs run
    # without heading <v>

    runs-on: [ubuntu-latest]
    needs: [build_wheels, build_sdist]

    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')

    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist

    - name: upload_to_pypi
      uses: pypa/gh-action-pypi-publish@v1.8.10
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
        skip_existing: true
